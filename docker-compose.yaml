services:
  writedb:
    image: postgres:latest
    container_name: writedb
    restart: always
    ports:
      - ${WRITEDB_PORT}:5432
    environment:
      POSTGRES_USER: ${WRITEDB_USER}
      POSTGRES_PASSWORD: ${WRTIEDB_PASSWORD}
      POSTGRES_DB: ${WRITEDB_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${WRITEDB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    volumes:
      - writedb_data:/var/lib/postgresql/data

  readdb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "${READDB_PORT}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${READDB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${READDB_PASSWORD}
      - MONGO_INITDB_DATABASE=${READDB_DATABASE}
    volumes:
      - readdb_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      retries: 3
      start_period: 10s
      timeout: 10s


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "${RMQ_PORT}:5672"  # RabbitMQ
      - "${RMQ_MGMT_PORT}:15672"  # Management console
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
volumes:
  writedb_data:
  readdb_data:
  rabbitmq_data:
